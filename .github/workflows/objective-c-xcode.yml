name: Xcode - Build and Analyze

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and analyse default scheme using xcodebuild command
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.6'

      - name: Flutter pub get
        run: |
          cd packages/template/dcf_go
          flutter pub get

      - name: Build iOS ephemeral files
        run: |
          cd packages/template/dcf_go
          flutter build ios --no-codesign

      - name: List files in iOS project directory
        run: |
          cd packages/template/dcf_go/ios
          ls -la

      - name: Check for Xcode project
        run: |
          cd packages/template/dcf_go/ios
          if ! ls *.xcodeproj 1> /dev/null 2>&1 && ! ls *.xcworkspace 1> /dev/null 2>&1; then
            echo "No Xcode project or workspace found in $(pwd)."
            exit 1
          fi

      - name: Set Default Scheme
        run: |
          cd packages/template/dcf_go/ios
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          if [ -z "$scheme_list" ]; then
            echo "No schemes found. Is the Xcode project present and valid?"
            exit 1
          fi
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default > default
          echo Using default scheme: $default

      - name: Build
        run: |
          cd packages/template/dcf_go/ios
          scheme=$(cat default)
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then 
            filetype_parameter="workspace"
            file_to_build="`ls -A | grep -i \\.xcworkspace\$`"
          else 
            filetype_parameter="project"
            file_to_build="`ls -A | grep -i \\.xcodeproj\$`"
          fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          xcodebuild clean build analyze -scheme "$scheme" -"$filetype_parameter" "$file_to_build" | xcpretty && exit ${PIPESTATUS[0]}
